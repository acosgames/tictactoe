{"version":3,"file":"server.bundle.dev.js","sources":["../../acosgames/game/dist/server.js","../game-server/game.js","../game-server/index.js"],"sourcesContent":["// class ACOSG {\n// let userActions: Action[];\n// let originalState: GameState;\nvar gameState;\nvar currentAction;\n// let isNewGame: boolean;\nvar defaultSeconds;\nvar kickedPlayers;\nconst init = () => {\n    // try {\n    //     userActions = JSON.parse(JSON.stringify(actions()));\n    // } catch (e) {\n    //     error(\"Failed to load actions\");\n    //     return;\n    // }\n    // try {\n    //     originalState = JSON.parse(JSON.stringify(game()));\n    // } catch (e) {\n    //     error(\"Failed to load originalState\");\n    //     return;\n    // }\n    try {\n        gameState = JSON.parse(JSON.stringify(game()));\n    }\n    catch (e) {\n        error(\"Failed to load gameState\");\n        return;\n    }\n    currentAction = null;\n    // isNewGame = false;\n    // markedForDelete = false;\n    // defaultSeconds = 15;\n    // nextTimeLimit = -1;\n    kickedPlayers = [];\n};\nconst on = (type, cb) => {\n    // if (type == 'newgame') {\n    //     //if (isNewGame) {\n    //     currentAction = actions[0];\n    //     if (currentAction.type == '')\n    //         cb(actions[0]);\n    //     isNewGame = false;\n    //     //}\n    //     return;\n    // }\n    let userActions = actions();\n    for (var i = 0; i < userActions.length; i++) {\n        if (userActions[i].type == type) {\n            currentAction = userActions[i];\n            let result = cb(currentAction);\n            if (typeof result == \"boolean\" && !result) {\n                ignore();\n                break;\n            }\n        }\n    }\n};\n// function ignore(): void {\n//     ignore();\n// }\nconst setGame = (game) => {\n    for (var id in gameState.players) {\n        let player = gameState.players[id];\n        game.players[id] = player;\n    }\n    gameState = game;\n};\nconst commit = () => {\n    // if (kickedPlayers.length > 0)\n    //     gameState.kick = kickedPlayers;\n    save(gameState);\n};\nconst gameover = (payload) => {\n    event(\"gameover\", payload);\n};\nconst log = (...msg) => {\n    gamelog(...msg);\n};\nconst error = (...msg) => {\n    gameerror(...msg);\n};\nconst kickPlayer = (id) => {\n    kickedPlayers.push(id);\n};\n// const random():number {\n//     return random();\n// }\nconst randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n};\n// const database(): any {\n//     return database();\n// }\nconst action = () => {\n    return currentAction;\n};\nconst gamestate = () => {\n    return gameState;\n};\nconst room = (key, value) => {\n    if (typeof key === \"undefined\")\n        return gameState.room;\n    if (typeof value === \"undefined\")\n        return gameState.room[key];\n    gameState.room[key] = value;\n    return value;\n};\nconst state = (key, value) => {\n    if (typeof key === \"undefined\")\n        return gameState.state;\n    if (typeof value === \"undefined\")\n        return gameState.state[key];\n    gameState.state[key] = value;\n    return value;\n};\nconst playerList = () => {\n    return Object.keys(gameState.players);\n};\nconst playerCount = () => {\n    return Object.keys(gameState.players).length;\n};\nconst players = (userid, value) => {\n    if (typeof userid === \"undefined\")\n        return gameState.players;\n    if (typeof value === \"undefined\")\n        return gameState.players[userid];\n    gameState.players[userid] = value;\n    return value;\n};\nconst teams = (teamid, value) => {\n    if (typeof teamid === \"undefined\")\n        return gameState.teams;\n    if (typeof value === \"undefined\")\n        return gameState.teams[teamid];\n    gameState.teams[teamid] = value;\n};\n// rules(rule, value) {\n//     if (typeof rule === 'undefined')\n//         return gameState.rules;\n//     if (typeof value === 'undefined')\n//         return gameState.rules[rule];\n//     gameState.rules[rule] = value;\n// }\n// prev(obj) {\n//     if (typeof obj === 'object') {\n//         gameState.prev = obj;\n//     }\n//     return gameState.prev;\n// }\nconst next = (obj) => {\n    if (typeof obj === \"object\") {\n        gameState.next = obj;\n    }\n    return gameState.next;\n};\nconst setTimelimit = (seconds) => {\n    seconds = seconds || 15;\n    if (!gameState.timer)\n        gameState.timer = {};\n    gameState.timer.set = seconds; //Math.min(60, Math.max(10, seconds));\n};\nconst reachedTimelimit = (action) => {\n    if (typeof action.timeleft == \"undefined\")\n        return false;\n    return action.timeleft <= 0;\n};\nconst event = (name, payload) => {\n    if (!payload)\n        return gameState.events[name];\n    gameState.events[name] = payload || {};\n};\nconst clearEvents = () => {\n    gameState.events = {};\n};\n// events(name) {\n//     if (typeof name === 'undefined')\n//         return gameState.events;\n//     gameState.events.push(name);\n// }\n// }\nexport default {\n    log: log,\n    error: error,\n    init: init,\n    on: on,\n    setGame: setGame,\n    commit: commit,\n    gameover: gameover,\n    kickPlayer: kickPlayer,\n    randomInt: randomInt,\n    action: action,\n    gamestate: gamestate,\n    room: room,\n    state: state,\n    playerList: playerList,\n    playerCount: playerCount,\n    players: players,\n    teams: teams,\n    next: next,\n    setTimelimit: setTimelimit,\n    reachedTimelimit: reachedTimelimit,\n    event: event,\n    clearEvents: clearEvents,\n};\n// export default new ACOSG();\n","// import ACOSServer from './acosg';\r\n\r\nimport { ACOSServer } from \"acosgames\";\r\n\r\n// let defaultGame = {\r\n//     state: {\r\n//         // cells2: {\r\n//         //     0: '', 1: '', 2: '', 3: '', 4: '', 5: '', 6: '', 7: '', 8: ''\r\n//         // },\r\n//         cells: ['', '', '', '', '', '', '', '', ''],\r\n//         //sx: ''\r\n//     },\r\n//     players: {},\r\n//     next: {},\r\n//     events: {}\r\n// }\r\n\r\n// let defaultState = { cells: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"] };\r\n\r\nclass Tictactoe {\r\n    defaultState = { cells: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"] };\r\n\r\n    onNewGame(action) {\r\n        let game = ACOSServer.gamestate();\r\n        game.state = this.defaultState;\r\n\r\n        this.checkNewRound();\r\n    }\r\n\r\n    onSkip(action) {\r\n        let next = ACOSServer.next();\r\n        if (!next || !next.id) return;\r\n        // let id = action.payload.id;\r\n        // if (!next.id) {\r\n        //     id = next.id;\r\n        // }\r\n\r\n        this.playerLeave(next.id);\r\n    }\r\n\r\n    onJoin(action) {\r\n        ACOSServer.log(action);\r\n        if (!action.user.id) return;\r\n\r\n        let player = ACOSServer.players(action.user.id);\r\n        // player.rank = 2;\r\n        // player.score = 0;\r\n\r\n        let teams = ACOSServer.teams();\r\n        if (teams && player.teamid) {\r\n            teams[player.teamid].rank = 2;\r\n            teams[player.teamid].score = 0;\r\n        }\r\n\r\n        ACOSServer.log(\"TICTACTOE PLAYER INFO:\");\r\n        ACOSServer.log(player);\r\n\r\n        ACOSServer.players(action.user.id, player);\r\n\r\n        let playerCount = ACOSServer.playerCount();\r\n        if (playerCount <= 2) {\r\n            ACOSServer.event(\"join\", {\r\n                id: action.user.id,\r\n            });\r\n            // this.checkNewRound();\r\n        } else {\r\n        }\r\n\r\n        // if (ACOSServer.players(action.user.id).type)\r\n        //     return;\r\n    }\r\n\r\n    checkNewRound() {\r\n        //if player count reached required limit, start the game\r\n        //let maxPlayers = ACOSServer.rules('maxPlayers') || 2;\r\n        let playerCount = ACOSServer.playerCount();\r\n        if (playerCount >= 2) {\r\n            this.newRound();\r\n        }\r\n    }\r\n\r\n    onLeave(action) {\r\n        this.playerLeave(action.user.id);\r\n    }\r\n\r\n    playerLeave(id) {\r\n        let players = ACOSServer.players();\r\n        let otherPlayerId = null;\r\n        if (players[id]) {\r\n            otherPlayerId = this.selectNextPlayer(id);\r\n            //delete players[id];\r\n        }\r\n\r\n        if (otherPlayerId) {\r\n            let otherPlayer = players[otherPlayerId];\r\n            this.setWinner(otherPlayer.type, \"forfeit\");\r\n        }\r\n    }\r\n\r\n    onPick(action) {\r\n        let room = ACOSServer.room();\r\n        if (room.status != \"gamestart\") return false;\r\n\r\n        let state = ACOSServer.state();\r\n        let user = ACOSServer.players(action.user.id);\r\n        if (user.test2) delete user.test2;\r\n        //get the picked cell\r\n        let cellid = action.payload;\r\n        if (typeof cellid !== \"number\") return false;\r\n\r\n        let cell = state.cells[cellid];\r\n\r\n        // block picking cells with markings, and send error\r\n        if (cell.length > 0) {\r\n            user._error = {\r\n                message: \"Square is not empty!\",\r\n            };\r\n            return true;\r\n        }\r\n\r\n        //mark the selected cell\r\n        let type = user.type;\r\n        let id = action.user.id;\r\n        state.cells[cellid] = type;\r\n\r\n        // ACOSServer.event('picked', {\r\n        //     cellid, id\r\n        // });\r\n        // ACOSServer.prev()\r\n\r\n        if (this.checkWinner()) {\r\n            return;\r\n        }\r\n\r\n        ACOSServer.setTimelimit(15);\r\n        this.selectNextPlayer(null);\r\n    }\r\n\r\n    newRound() {\r\n        let playerList = ACOSServer.playerList();\r\n\r\n        let state = ACOSServer.state();\r\n        //select the starting player\r\n\r\n        let xteam = ACOSServer.teams(\"team_x\");\r\n        // let xplayer = ACOSServer.players(  );\r\n\r\n        state.sx = xteam.players[0];\r\n\r\n        ACOSServer.next({\r\n            id: state.sx,\r\n            action: \"pick\",\r\n        });\r\n        let players = ACOSServer.players() || {};\r\n        let playerIds = Object.keys(players);\r\n\r\n        let otherIds = playerIds.filter((value) => value != state.sx);\r\n\r\n        // let x = ACOSServer.randomInt(0, 2);\r\n        // let o = x == 0 ? 1 : 0;\r\n        let playerX = state.sx; //playerIds[x];\r\n        let playerO = otherIds[0]; //playerIds[o];\r\n\r\n        players[playerX].type = \"X\";\r\n        players[playerO].type = \"O\";\r\n\r\n        ACOSServer.event(\"newround\", true);\r\n        ACOSServer.setTimelimit(15);\r\n    }\r\n\r\n    selectNextPlayer(userid) {\r\n        let action = ACOSServer.action();\r\n        let players = ACOSServer.playerList();\r\n        userid = userid || action.user.id;\r\n        //only 2 players so just filter the current player\r\n        let remaining = players.filter((x) => x != userid);\r\n        ACOSServer.next({\r\n            id: remaining[0],\r\n            action: \"pick\",\r\n        });\r\n        return remaining[0];\r\n    }\r\n\r\n    // Check each strip that makes a win\r\n    //      0  |  1  |  2\r\n    //    -----------------\r\n    //      3  |  4  |  5\r\n    //    -----------------\r\n    //      6  |  7  |  8\r\n    checkWinner() {\r\n        if (this.check([0, 1, 2])) return true;\r\n        if (this.check([3, 4, 5])) return true;\r\n        if (this.check([6, 7, 8])) return true;\r\n        if (this.check([0, 3, 6])) return true;\r\n        if (this.check([1, 4, 7])) return true;\r\n        if (this.check([2, 5, 8])) return true;\r\n        if (this.check([0, 4, 8])) return true;\r\n        if (this.check([6, 4, 2])) return true;\r\n        if (this.checkNoneEmpty()) return true;\r\n        return false;\r\n    }\r\n\r\n    checkNoneEmpty() {\r\n        let cells = ACOSServer.state().cells;\r\n        // let cellslist = [];\r\n        // for (var key in cells) {\r\n        //     cellslist.push(cells[key]);\r\n        // }\r\n        let filtered = cells.filter((v) => v == \"\");\r\n\r\n        if (filtered.length == 0) {\r\n            this.setTie();\r\n        }\r\n        return filtered.length == 0;\r\n    }\r\n\r\n    // checks if a strip has matching types\r\n    check(strip) {\r\n        let cells = ACOSServer.state().cells;\r\n        // let cellslist = [];\r\n        // for (var key in cells) {\r\n        //     cellslist.push(cells[key]);\r\n        // }\r\n\r\n        let first = cells[strip[0]];\r\n        if (first == \"\") return false;\r\n        let filtered = strip.filter((id) => cells[id] == first);\r\n        if (filtered.length == 3 && filtered.length == strip.length) {\r\n            this.setWinner(first, strip);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findPlayerWithType(type) {\r\n        let players = ACOSServer.players();\r\n        for (var id in players) {\r\n            let player = players[id];\r\n            if (player.type == type) return id;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setTie() {\r\n        ACOSServer.gameover({ type: \"tie\" });\r\n        ACOSServer.next({});\r\n        // ACOSServer.prev({})\r\n\r\n        // ACOSServer.killGame();\r\n    }\r\n    // set the winner event and data\r\n    setWinner(type, strip) {\r\n        //find user who matches the win type\r\n        let userid = this.findPlayerWithType(type);\r\n        let player = ACOSServer.players(userid);\r\n\r\n        let teams = ACOSServer.teams();\r\n        if (teams && player.teamid) {\r\n            teams[player.teamid].rank = 1;\r\n            teams[player.teamid].score = 100;\r\n        }\r\n        // player.rank = 1;\r\n        // player.score = player.score + 100;\r\n        if (!player) {\r\n            player.id = \"unknown player\";\r\n        }\r\n\r\n        ACOSServer.gameover({\r\n            type: \"winner\",\r\n            pick: type,\r\n            strip: strip,\r\n            id: userid,\r\n        });\r\n        // cup.prev()\r\n        ACOSServer.next({});\r\n        // ACOSServer.killGame();\r\n    }\r\n}\r\n\r\nexport default Tictactoe;\r\n","import { ACOSServer } from \"acosgames\";\r\n// import cup from \"./acosg\";\r\nimport TicTacToe from \"./game\";\r\n\r\nlet tictactoe = new TicTacToe();\r\nACOSServer.init();\r\n\r\nACOSServer.on(\"gamestart\", (action) => tictactoe.onNewGame(action));\r\nACOSServer.on(\"skip\", (action) => tictactoe.onSkip(action));\r\nACOSServer.on(\"join\", (action) => tictactoe.onJoin(action));\r\nACOSServer.on(\"leave\", (action) => tictactoe.onLeave(action));\r\nACOSServer.on(\"pick\", (action) => tictactoe.onPick(action));\r\n\r\nACOSServer.commit();\r\n"],"names":["TicTacToe"],"mappings":"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"}