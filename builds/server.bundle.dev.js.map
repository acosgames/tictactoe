{"version":3,"file":"server.bundle.dev.js","sources":["../../acosgames/game/dist/server.js","../game-server/game.js","../game-server/index.js"],"sourcesContent":["// class ACOSG {\n// let userActions: Action[];\n// let originalState: GameState;\nvar gameState;\nvar currentAction;\n// let isNewGame: boolean;\nvar defaultSeconds;\nvar kickedPlayers;\nconst init = () => {\n    // try {\n    //     userActions = JSON.parse(JSON.stringify(actions()));\n    // } catch (e) {\n    //     error(\"Failed to load actions\");\n    //     return;\n    // }\n    // try {\n    //     originalState = JSON.parse(JSON.stringify(game()));\n    // } catch (e) {\n    //     error(\"Failed to load originalState\");\n    //     return;\n    // }\n    try {\n        gameState = JSON.parse(JSON.stringify(game()));\n    }\n    catch (e) {\n        error(\"Failed to load gameState\");\n        return;\n    }\n    currentAction = null;\n    // isNewGame = false;\n    // markedForDelete = false;\n    // defaultSeconds = 15;\n    // nextTimeLimit = -1;\n    kickedPlayers = [];\n};\nconst on = (type, cb) => {\n    // if (type == 'newgame') {\n    //     //if (isNewGame) {\n    //     currentAction = actions[0];\n    //     if (currentAction.type == '')\n    //         cb(actions[0]);\n    //     isNewGame = false;\n    //     //}\n    //     return;\n    // }\n    let userActions = actions();\n    for (var i = 0; i < userActions.length; i++) {\n        if (userActions[i].type == type) {\n            currentAction = userActions[i];\n            let result = cb(currentAction);\n            if (typeof result == \"boolean\" && !result) {\n                ignore();\n                break;\n            }\n        }\n    }\n};\n// function ignore(): void {\n//     ignore();\n// }\nconst setGame = (game) => {\n    for (var id in gameState.players) {\n        let player = gameState.players[id];\n        game.players[id] = player;\n    }\n    gameState = game;\n};\nconst commit = () => {\n    // if (kickedPlayers.length > 0)\n    //     gameState.kick = kickedPlayers;\n    save(gameState);\n};\nconst gameover = (payload) => {\n    event(\"gameover\", payload);\n};\nconst log = (...msg) => {\n    gamelog(...msg);\n};\nconst error = (...msg) => {\n    gameerror(...msg);\n};\nconst kickPlayer = (id) => {\n    kickedPlayers.push(id);\n};\n// const random():number {\n//     return random();\n// }\nconst randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n};\n// const database(): any {\n//     return database();\n// }\nconst action = () => {\n    return currentAction;\n};\nconst gamestate = () => {\n    return gameState;\n};\nconst room = (key, value) => {\n    if (typeof key === \"undefined\")\n        return gameState.room;\n    if (typeof value === \"undefined\")\n        return gameState.room[key];\n    gameState.room[key] = value;\n    return value;\n};\nconst state = (key, value) => {\n    if (typeof key === \"undefined\")\n        return gameState.state;\n    if (typeof value === \"undefined\")\n        return gameState.state[key];\n    gameState.state[key] = value;\n    return value;\n};\nconst playerList = () => {\n    return Object.keys(gameState.players);\n};\nconst playerCount = () => {\n    return Object.keys(gameState.players).length;\n};\nconst players = (userid, value) => {\n    if (typeof userid === \"undefined\")\n        return gameState.players;\n    if (typeof value === \"undefined\")\n        return gameState.players[userid];\n    gameState.players[userid] = value;\n    return value;\n};\nconst teams = (teamid, value) => {\n    if (typeof teamid === \"undefined\")\n        return gameState.teams;\n    if (typeof value === \"undefined\")\n        return gameState.teams[teamid];\n    gameState.teams[teamid] = value;\n};\n// rules(rule, value) {\n//     if (typeof rule === 'undefined')\n//         return gameState.rules;\n//     if (typeof value === 'undefined')\n//         return gameState.rules[rule];\n//     gameState.rules[rule] = value;\n// }\n// prev(obj) {\n//     if (typeof obj === 'object') {\n//         gameState.prev = obj;\n//     }\n//     return gameState.prev;\n// }\nconst next = (obj) => {\n    if (typeof obj === \"object\") {\n        gameState.next = obj;\n    }\n    return gameState.next;\n};\nconst setTimelimit = (seconds) => {\n    seconds = seconds || 15;\n    if (!gameState.timer)\n        gameState.timer = {};\n    gameState.timer.set = seconds; //Math.min(60, Math.max(10, seconds));\n};\nconst reachedTimelimit = (action) => {\n    if (typeof action.timeleft == \"undefined\")\n        return false;\n    return action.timeleft <= 0;\n};\nconst event = (name, payload) => {\n    if (!payload)\n        return gameState.events[name];\n    gameState.events[name] = payload || {};\n};\nconst clearEvents = () => {\n    gameState.events = {};\n};\n// events(name) {\n//     if (typeof name === 'undefined')\n//         return gameState.events;\n//     gameState.events.push(name);\n// }\n// }\nexport default {\n    log: log,\n    error: error,\n    init: init,\n    on: on,\n    setGame: setGame,\n    commit: commit,\n    gameover: gameover,\n    kickPlayer: kickPlayer,\n    randomInt: randomInt,\n    action: action,\n    gamestate: gamestate,\n    room: room,\n    state: state,\n    playerList: playerList,\n    playerCount: playerCount,\n    players: players,\n    teams: teams,\n    next: next,\n    setTimelimit: setTimelimit,\n    reachedTimelimit: reachedTimelimit,\n    event: event,\n    clearEvents: clearEvents,\n};\n// export default new ACOSG();\n","// import ACOSServer from './acosg';\r\n\r\nimport { ACOSServer } from \"acosgames\";\r\n\r\n// let defaultGame = {\r\n//     state: {\r\n//         cells: ['', '', '', '', '', '', '', '', ''],\r\n//         //sx: ''\r\n//     },\r\n//     players: {},\r\n//     next: {},\r\n//     events: {}\r\n// }\r\n\r\nconst defaultState = { cells: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"] };\r\n\r\nexport function onNewGame(action) {\r\n    let game = ACOSServer.gamestate();\r\n    game.state = defaultState;\r\n\r\n    checkNewRound();\r\n}\r\n\r\nexport function onSkip(action) {\r\n    let next = ACOSServer.next();\r\n    if (!next || !next.id) return;\r\n\r\n    playerLeave(next.id);\r\n}\r\n\r\nexport function onJoin(action) {\r\n    ACOSServer.log(action);\r\n    if (!action.user.id) return;\r\n\r\n    let player = ACOSServer.players(action.user.id);\r\n    player.rank = 2;\r\n    player.score = 0;\r\n\r\n    let teams = ACOSServer.teams();\r\n    if (teams && player.teamid) {\r\n        teams[player.teamid].rank = 2;\r\n        teams[player.teamid].score = 0;\r\n    }\r\n\r\n    ACOSServer.log(\"TICTACTOE PLAYER INFO:\");\r\n    ACOSServer.log(player);\r\n\r\n    ACOSServer.players(action.user.id, player);\r\n\r\n    let playerCount = ACOSServer.playerCount();\r\n    if (playerCount <= 2) {\r\n        ACOSServer.event(\"join\", {\r\n            id: action.user.id,\r\n        });\r\n    }\r\n}\r\n\r\nexport function onLeave(action) {\r\n    playerLeave(action.user.id);\r\n}\r\n\r\nexport function onPick(action) {\r\n    let room = ACOSServer.room();\r\n    if (room.status != \"gamestart\") return false;\r\n\r\n    let state = ACOSServer.state();\r\n    let user = ACOSServer.players(action.user.id);\r\n\r\n    //get the picked cell\r\n    let cellid = action.payload;\r\n    if (typeof cellid !== \"number\") return false;\r\n\r\n    // block picking cells with markings, and send error\r\n    let cell = state.cells[cellid];\r\n    if (cell.length > 0) {\r\n        user._error = {\r\n            message: \"Square is not empty!\",\r\n        };\r\n        return true;\r\n    }\r\n\r\n    //mark the selected cell\r\n    let type = user.type;\r\n    state.cells[cellid] = type;\r\n\r\n    if (checkWinner()) return;\r\n\r\n    ACOSServer.setTimelimit(15);\r\n    selectNextPlayer(null);\r\n}\r\n\r\nfunction checkNewRound() {\r\n    //if player count reached required limit, start the game\r\n    //let maxPlayers = ACOSServer.rules('maxPlayers') || 2;\r\n    let playerCount = ACOSServer.playerCount();\r\n    if (playerCount >= 2) {\r\n        newRound();\r\n    }\r\n}\r\n\r\nfunction playerLeave(id) {\r\n    let players = ACOSServer.players();\r\n    let otherPlayerId = null;\r\n    if (players[id]) otherPlayerId = selectNextPlayer(id);\r\n\r\n    if (otherPlayerId) {\r\n        let otherPlayer = players[otherPlayerId];\r\n        setWinner(otherPlayer.type, \"forfeit\");\r\n    }\r\n}\r\n\r\nfunction newRound() {\r\n    let playerList = ACOSServer.playerList();\r\n\r\n    let state = ACOSServer.state();\r\n\r\n    //select the starting player\r\n    let xteam = ACOSServer.teams(\"team_x\");\r\n    state.sx = xteam.players[0];\r\n\r\n    ACOSServer.next({\r\n        id: state.sx,\r\n        action: \"pick\",\r\n    });\r\n    let players = ACOSServer.players() || {};\r\n    let playerIds = Object.keys(players);\r\n\r\n    let otherIds = playerIds.filter((value) => value != state.sx);\r\n\r\n    let playerX = state.sx;\r\n    let playerO = otherIds[0];\r\n\r\n    players[playerX].type = \"X\";\r\n    players[playerO].type = \"O\";\r\n\r\n    ACOSServer.event(\"newround\", true);\r\n    ACOSServer.setTimelimit(15);\r\n}\r\n\r\nfunction selectNextPlayer(userid) {\r\n    let action = ACOSServer.action();\r\n    let players = ACOSServer.playerList();\r\n    userid = userid || action.user.id;\r\n\r\n    //only 2 players so just filter the current player\r\n    let remaining = players.filter((x) => x != userid);\r\n    ACOSServer.next({\r\n        id: remaining[0],\r\n        action: \"pick\",\r\n    });\r\n    return remaining[0];\r\n}\r\n\r\n// Check each strip that makes a win\r\n//      0  |  1  |  2\r\n//    -----------------\r\n//      3  |  4  |  5\r\n//    -----------------\r\n//      6  |  7  |  8\r\nfunction checkWinner() {\r\n    if (check([0, 1, 2])) return true;\r\n    if (check([3, 4, 5])) return true;\r\n    if (check([6, 7, 8])) return true;\r\n    if (check([0, 3, 6])) return true;\r\n    if (check([1, 4, 7])) return true;\r\n    if (check([2, 5, 8])) return true;\r\n    if (check([0, 4, 8])) return true;\r\n    if (check([6, 4, 2])) return true;\r\n    if (checkNoneEmpty()) return true;\r\n    return false;\r\n}\r\n\r\nfunction checkNoneEmpty() {\r\n    let cells = ACOSServer.state().cells;\r\n    let filtered = cells.filter((v) => v == \"\");\r\n\r\n    if (filtered.length == 0) {\r\n        setTie();\r\n    }\r\n    return filtered.length == 0;\r\n}\r\n\r\n// checks if a strip has matching types\r\nfunction check(strip) {\r\n    let cells = ACOSServer.state().cells;\r\n    let first = cells[strip[0]];\r\n    if (first == \"\") return false;\r\n    let filtered = strip.filter((id) => cells[id] == first);\r\n    if (filtered.length == 3 && filtered.length == strip.length) {\r\n        setWinner(first, strip);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction findPlayerWithType(type) {\r\n    let players = ACOSServer.players();\r\n    for (var id in players) {\r\n        let player = players[id];\r\n        if (player.type == type) return id;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction setTie() {\r\n    ACOSServer.gameover({ type: \"tie\" });\r\n    ACOSServer.next({});\r\n}\r\n\r\n// set the winner event and data\r\nfunction setWinner(type, strip) {\r\n    //find user who matches the win type\r\n    let userid = findPlayerWithType(type);\r\n    let player = ACOSServer.players(userid);\r\n\r\n    let teams = ACOSServer.teams();\r\n    if (teams && player.teamid) {\r\n        teams[player.teamid].rank = 1;\r\n        teams[player.teamid].score = 100;\r\n    }\r\n    player.rank = 1;\r\n    player.score = player.score + 100;\r\n    if (!player) {\r\n        player.id = \"unknown player\";\r\n    }\r\n\r\n    ACOSServer.gameover({\r\n        type: \"winner\",\r\n        pick: type,\r\n        strip: strip,\r\n        id: userid,\r\n    });\r\n    ACOSServer.next({});\r\n}\r\n","import { ACOSServer } from \"acosgames\";\r\n// import cup from \"./acosg\";\r\nimport { onJoin, onLeave, onNewGame, onPick, onSkip } from \"./game\";\r\n\r\n//prepare gameState for mutation\r\nACOSServer.init();\r\n\r\n//ACOS events\r\nACOSServer.on(\"gamestart\", onNewGame);\r\nACOSServer.on(\"join\", onJoin);\r\nACOSServer.on(\"leave\", onLeave);\r\nACOSServer.on(\"skip\", onSkip);\r\n\r\n//Custom events\r\nACOSServer.on(\"pick\", onPick);\r\n\r\n//Save changes\r\nACOSServer.commit();\r\n"],"names":[],"mappings":"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"}